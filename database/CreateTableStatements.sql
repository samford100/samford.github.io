DROP TABLE USER_IN_ESCALATION_LEVEL;
DROP TABLE SCHEDULE_IN_ESCALATION_LEVEL;
DROP TABLE USER_IN_TEAM;
DROP TABLE USER_MANAGES_TEAM;
DROP TABLE OVERRIDE_SHIFT;
DROP TABLE MANUAL_SHIFT;
DROP TABLE USER_IN_ROTATION_SHIFT;
DROP TABLE ROTATION_SHIFT;
DROP TABLE SCHEDULE;
DROP TABLE TEAM;
DROP TABLE USER;
DROP TABLE ESCALATION_LEVEL;
DROP TABLE PING;
DROP TABLE SERVICE;

CREATE TABLE USER (
	Username		VARCHAR(25)		NOT NULL,
    Password		VARCHAR(50)		NOT NULL,
    FirstName		VARCHAR(15)		NOT NULL,
    LastName		VARCHAR(25)		NOT NULL,
    Email			VARCHAR(254),
    Phone			VARCHAR(12),
    PRIMARY KEY (Username)
);

CREATE TABLE TEAM (
	ID				INT				NOT NULL AUTO_INCREMENT,
    Name			VARCHAR(50)		NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);

CREATE TABLE USER_IN_TEAM (
	Username		VARCHAR(25)		NOT NULL,
	TeamID			INT				NOT NULL,
    PRIMARY KEY (Username,TeamID),
    FOREIGN KEY (Username) references USER(Username) ON DELETE CASCADE,
    FOREIGN KEY (TeamID) references TEAM(ID) ON DELETE CASCADE
);

CREATE TABLE USER_MANAGES_TEAM (
	Username		VARCHAR(25)		NOT NULL,
	TeamID			INT				NOT NULL,
    PRIMARY KEY (Username,TeamID),
    FOREIGN KEY (Username) references USER(Username) ON DELETE CASCADE,
    FOREIGN KEY (TeamID) references TEAM(ID) ON DELETE CASCADE
);

CREATE TABLE SCHEDULE (
	TeamID			INT				NOT NULL,
    Name			VARCHAR(50)		NOT NULL,
    PRIMARY KEY (TeamID,Name),
    FOREIGN KEY (TeamID) references TEAM(ID) ON DELETE CASCADE
);

CREATE TABLE OVERRIDE_SHIFT (
    ID				INT				NOT NULL AUTO_INCREMENT,
    TeamID			INT				NOT NULL,
    ScheduleName	VARCHAR(50)		NOT NULL,
    TimeStamp 		TIMESTAMP		NOT NULL,
    Duration		INT				NOT NULL,
    Username		VARCHAR(25) 	NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (TeamID,ScheduleName) references SCHEDULE(TeamID,Name) ON DELETE CASCADE,
    FOREIGN KEY (Username) references USER(Username) ON DELETE CASCADE
);

CREATE TABLE MANUAL_SHIFT (
    ID				INT				NOT NULL AUTO_INCREMENT,
    TeamID			INT				NOT NULL,
    ScheduleName	VARCHAR(50)		NOT NULL,
    TimeStamp 		TIMESTAMP		NOT NULL,
    Duration		INT				NOT NULL,
    Username		VARCHAR(25) 	NOT NULL,
    Repeated		BOOLEAN			NOT NULL,
    RepeatType		INT				NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (TeamID,ScheduleName) references SCHEDULE(TeamID,Name) ON DELETE CASCADE,
    FOREIGN KEY (Username) references USER(Username) ON DELETE CASCADE
);

CREATE TABLE ROTATION_SHIFT (
    ID				INT				NOT NULL AUTO_INCREMENT,
    TeamID			INT				NOT NULL,
    ScheduleName	VARCHAR(50)		NOT NULL,
    TimeStamp 		TIMESTAMP		NOT NULL,
    Duration		INT				NOT NULL,
    Repeated		BOOLEAN			NOT NULL,
    RepeatType		INT				NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (TeamID,ScheduleName) references SCHEDULE(TeamID,Name) ON DELETE CASCADE
);

CREATE TABLE USER_IN_ROTATION_SHIFT (
	Username		VARCHAR(25) 	NOT NULL,
    ShiftID			INT				NOT NULL,
    Position		INT				NOT NULL,
    PRIMARY KEY (Username,ShiftID),
    FOREIGN KEY (Username) references USER(Username) ON DELETE CASCADE,
    FOREIGN KEY (ShiftID) references ROTATION_SHIFT(ID) ON DELETE CASCADE,
    UNIQUE(Username,ShiftID,Position)
);

CREATE TABLE SERVICE (
	ID				INT				NOT NULL AUTO_INCREMENT,
    Name			VARCHAR(50)		NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);

CREATE TABLE ESCALATION_LEVEL (
	ServiceID		INT				NOT NULL,
	Level			INT				NOT NULL,
    Delay			INT				NOT NULL,
    PRIMARY KEY (ServiceID,Level),
    FOREIGN KEY (ServiceID) REFERENCES SERVICE(ID) ON DELETE CASCADE
);

CREATE TABLE USER_IN_ESCALATION_LEVEL (
	Username		VARCHAR(25)		NOT NULL,		
	ServiceID		INT				NOT NULL,
	Level			INT				NOT NULL,
	PRIMARY KEY (Username,ServiceID,Level),
    FOREIGN KEY (Username) REFERENCES USER(Username) ON DELETE CASCADE,
    FOREIGN KEY (ServiceID,Level) REFERENCES ESCALATION_LEVEL(ServiceID,Level) ON DELETE CASCADE
);

CREATE TABLE SCHEDULE_IN_ESCALATION_LEVEL (
	TeamID			INT				NOT NULL,
    Name			VARCHAR(50)		NOT NULL,
	ServiceID		INT				NOT NULL,
	Level			INT				NOT NULL,
	PRIMARY KEY (TeamID,Name,ServiceID,Level),
    FOREIGN KEY (TeamID,Name) REFERENCES SCHEDULE(TeamID,Name) ON DELETE CASCADE,
    FOREIGN KEY (ServiceID,Level) REFERENCES ESCALATION_LEVEL(ServiceID,Level) ON DELETE CASCADE
);

CREATE TABLE PING (
	ID				INT				NOT NULL AUTO_INCREMENT,
    ServiceID		INT				NOT NULL,
    Name			VARCHAR(50)     NOT NULL,
    Description     VARCHAR(500),
    Status			VARCHAR(20)		NOT NULL,
    CreatedTime	    TIMESTAMP		DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (ServiceID) REFERENCES SERVICE(ID) ON DELETE CASCADE
);


